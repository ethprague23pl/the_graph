// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class TicketBought extends ethereum.Event {
  get params(): TicketBought__Params {
    return new TicketBought__Params(this);
  }
}

export class TicketBought__Params {
  _event: TicketBought;

  constructor(event: TicketBought) {
    this._event = event;
  }

  get _contractEvent(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _ticketId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ProxyEvents extends ethereum.SmartContract {
  static bind(address: Address): ProxyEvents {
    return new ProxyEvents("ProxyEvents", address);
  }
}

export class AddEventToListenCall extends ethereum.Call {
  get inputs(): AddEventToListenCall__Inputs {
    return new AddEventToListenCall__Inputs(this);
  }

  get outputs(): AddEventToListenCall__Outputs {
    return new AddEventToListenCall__Outputs(this);
  }
}

export class AddEventToListenCall__Inputs {
  _call: AddEventToListenCall;

  constructor(call: AddEventToListenCall) {
    this._call = call;
  }

  get _event(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddEventToListenCall__Outputs {
  _call: AddEventToListenCall;

  constructor(call: AddEventToListenCall) {
    this._call = call;
  }
}

export class EmitEventCall extends ethereum.Call {
  get inputs(): EmitEventCall__Inputs {
    return new EmitEventCall__Inputs(this);
  }

  get outputs(): EmitEventCall__Outputs {
    return new EmitEventCall__Outputs(this);
  }
}

export class EmitEventCall__Inputs {
  _call: EmitEventCall;

  constructor(call: EmitEventCall) {
    this._call = call;
  }

  get _event(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class EmitEventCall__Outputs {
  _call: EmitEventCall;

  constructor(call: EmitEventCall) {
    this._call = call;
  }
}
